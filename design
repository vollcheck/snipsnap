notes on snipsnap database/routes design

-- MODELS
users
	id - id (auto)
	username - text
	password - text
        email - text
        avatar - bytes (optional)
        bio - text (optional, rich one?)

language
        id - id
        name - text

snaps
	id - id
	user_id - id - relation to user
	title - text
	content - text (rich one?)
        language_id - relation to language
	create_date - date - auto set
	update_date - date - auto set

-- ROUTES
	/login
	/register - create user
        /password-reset (optional)
	/ - dashboard
	/<username> - user profile + list of recent snaps
	/<username>/<title> - specific snap - CRUD on snap entity
	/<username>/<id> - same as above (optional)


-- TASKS
        + make one abstract CRUD method for each entity
        + make ability to load db seed data dynamically
        + replace `println` with logging here and there
        + implement routes
        + update tests
        + `create-date` and `update-date` auto inserting
